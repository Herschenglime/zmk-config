/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


&mt {
  //  flavor = "tap-preferred";
   // tapping_term_ms = <200>;
};

/ { 

    combos {
        compatible = "zmk,combos";

        combo_del {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp DEL>;
        };
        
         combo_backspace {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp BSPC>;
        };
        
         combo_backslash {
            timeout-ms = <50>;
            key-positions = <8 9>;
            bindings = <&kp BSPC>;
        };
        
         combo_hyphen {
            timeout-ms = <50>;
            key-positions = <13 14>;
            bindings = <&kp MINUS>;
        };
        
         combo_equals {
            timeout-ms = <50>;
            key-positions = <15 16>;
            bindings = <&kp BSPC>;
        };
        
          combo_quote_mod {
            timeout-ms = <50>;
            key-positions = <18 19>;
            bindings = <&mt LGUI SQT>;
        };
        
          combo_numlayer {
            timeout-ms = <15>;
            key-positions = <30 33>;
            bindings = <&tg 1>;
        };
          combo_reset {
            timeout-ms = <50>;
            key-positions = <1 2 7 8>;
            bindings = <&reset>;
        };
          combo_bootloader {
            timeout-ms = <15>;
            key-positions = <3 4 5 6>;
            bindings = <&tog 1>;
        };
          combo_caps_word {
            timeout-ms = <15>;
            key-positions = <31 32>;
            bindings = <&caps_word>;
        };
        
        
    };

        keymap {
                compatible = "zmk,keymap";
/*                         
                                                 reset
                           ┌─────┬─────────────────┴─────────────────┬─────┐
                           │     │            bootloader             │     │
                           │     │     ┌─────┬─────┴─────┬─────┐     │     │
                  |  q  |  w  |  f  |  p  |  b  |     |  j  |  l  |  u  |  y  |  ;  |
                  |    DEL    |     |     |     |     |     |     |     |     \     |

                  |  a  |  r  |  s  |  t  |  g  |     |  m  |  n  |  e  |  i  |  o  |
                  | lt2 |     |     |     |     |     |     |     |     |     | lt3 |
                  |     |     |     |     |     |     |     |     |     |     '     |
                  |    BSP    |     |     -     |     |     =     |     |    MOD    |

                  |  z  |  x  |  c  |  d  |  v  |     |  k  |  h  |  ,  |  .  |  /  |
                  | CTL |     |     |     |     |     |     |     |     |     | CTL |

                                    | SPC | ESC |     | TAB | ENT |
                                    | SFT | CTL |     | ALT | MOD |   
                                       │     └─────┬─────┘     │
                                       │       caps_word       │
                                       │                       │
                                       └───────────┬───────────┘
                                                 ltog2
*/

       		default_layer {
		bindings = <
		&kp Q &kp W &kp F &kp P &kp B 						&kp J &kp L  &kp U    &kp Y   &kp SEMI 
		&lt 2 A &kp R &kp S &kp T &kp G 			        	        &kp M &kp N &kp E &kp I &kp O
		&mt LCTL Z &kp X &kp C &kp D &kp V				        &kp K &kp H  &kp CMMA &kp DOT &mt LCTL FSLH
          				&mt LSFT SPC &mt LCTL ESC  				&mt LALT TAB &mt LGUI RET
		>;
		};

            //      |  !  |  @  |  {  |  }  |  &  |     | INS |  7  |  8  |  9  |  *  |
            //      |    DEL    |     |     |     |     |     |     |     |     \     |

            //      |  #  |  $  |  (  |  )  |  *  |     |  0  |  4  |  5  |  6  |  +  |
            //      |    BSP    |     |     -     |     |     =     |     |    MOD    |

            //      |  %  |  ^  |  [  |  ]  |  `  |     |SYSRQ|  1  |  2  |  3  |  /  |

       		number_layer {
		bindings = <
		&kp EXCL &kp AT &kp LBRC &kp RBRC &kp AMPS 						&kp INS &kp N7  &kp N8    &kp N9   &kp ASTRK 
		&kp HASH &kp DLLR &kp LPAR &kp RPAR &kp ASTRK 			        	      &kp N0 &kp N4 &kp N5 &kp N6 &kp PLUS
		&kp PRCNT &kp CARET &kp LBKT &kp RBKT &kp GRAVE				        &kp PSCRN &kp N1  &kp N2 &kp N3 &kp SLASH
          				&trans &trans               &trans &trans
		>;
		};

       		movement_layer {
		bindings = <
		&kp NUM_1  &kp NUM_2    &kp NUM_3    &kp NUM_4    &kp NUM_5		&kp NUM_6 &kp NUM_7 &kp NUM_8 &kp NUM_9 &kp NUM_0 
		&kp TAB    &kp LC(S)    &kp DQT      &kp PIPE2     &kp HASH 		&kp MINUS &kp EQL  &kp LBKT &kp RBKT  &kp DEL 
		&kp ESC    &kp TILDE 	&kp NON_US_BSLH &kp NON_US_HASH  &kp TILDE2 	&kp MINUS &kp GRAVE &kp LBKT &kp RBKT  &kp DEL 
					    &mo 1  &kp LGUI  					&kp RGUI &mo 2 
		>;
		};
		
	};
};
